@model DotnetMVCApp.ViewModels.ResetPasswordViewModel
@{
    ViewData["Title"] = "Reset Password";
}

<div class="min-h-screen flex items-center justify-center bg-gray-900">
    <div class="bg-gray-800 shadow-lg rounded-2xl p-8 w-full max-w-md">
        <h2 class="text-2xl font-bold mb-6 text-center text-white">Reset Password 🔒</h2>

        <form asp-action="ResetPassword" method="post" class="space-y-4" id="ResetPasswordForm">
            <input type="hidden" asp-for="Email" />

            <!-- New Password -->
            <div>
                <label asp-for="NewPassword" class="block text-sm font-medium text-gray-200">New Password</label>
                <input asp-for="NewPassword" type="password" id="PasswordInput" required
                       class="mt-1 block w-full rounded-lg border-gray-600 bg-gray-700 text-white shadow-sm
                              focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-2" />
                <span asp-validation-for="NewPassword" class="text-red-400 text-sm"></span>

                <!-- Password Rules -->
                <div class="mt-2 p-4 bg-black rounded-2xl border border-gray-700 shadow-md">
                    <p class="text-xs text-gray-300">
                        <b>Password must have:</b><br />
                        <span class="text-green-300 font-medium">1 uppercase (A-Z)</span>,
                        <span class="text-green-300 font-medium">1 lowercase (a-z)</span>,
                        <span class="text-green-300 font-medium">1 digit (0-9)</span>,<br />
                        <span class="text-green-300 font-medium">1 special character</span>,
                        <b>minimum </b><span class="text-green-300 font-medium">8 characters</span>.
                    </p>
                </div>

                <!-- Strength Meter -->
                <div id="PasswordStrengthWrapper" class="mt-2 hidden">
                    <div class="w-full bg-gray-600 rounded-full h-2">
                        <div id="PasswordStrengthBar" class="h-2 rounded-full"></div>
                    </div>
                    <p id="PasswordStrengthText" class="mt-1 text-sm text-gray-400"></p>
                </div>
            </div>

            <!-- Confirm Password -->
            <div>
                <label asp-for="ConfirmPassword" class="block text-sm font-medium text-gray-200">Confirm Password</label>
                <input asp-for="ConfirmPassword" type="password" required
                       class="mt-1 block w-full rounded-lg border-gray-600 bg-gray-700 text-white shadow-sm
                              focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-2" />
                <span asp-validation-for="ConfirmPassword" class="text-red-400 text-sm"></span>
            </div>

            <!-- Submit -->
            <button type="submit" id="SubmitBtn"
                    class="w-full bg-indigo-600 text-white py-2 rounded-xl shadow-md hover:bg-indigo-700 transition flex items-center justify-center">
                <span id="SubmitBtnText">Reset Password</span>
                <div id="SubmitBtnSpinner"
                     class="hidden ml-2 w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
            </button>
        </form>

        <div class="mt-4 text-center">
            <a asp-action="Login" class="text-indigo-400 hover:underline">Back to Login</a>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        const passwordInput = document.getElementById("PasswordInput");
        const strengthWrapper = document.getElementById("PasswordStrengthWrapper");
        const strengthBar = document.getElementById("PasswordStrengthBar");
        const strengthText = document.getElementById("PasswordStrengthText");
        const submitBtn = document.getElementById("SubmitBtn");
        const submitText = document.getElementById("SubmitBtnText");
        const submitSpinner = document.getElementById("SubmitBtnSpinner");
        const form = document.getElementById("ResetPasswordForm");

        // Password strength check
        function checkPasswordStrength(password) {
            let strength = 0;
            if (password.length >= 8) strength++;
            if (/[A-Z]/.test(password)) strength++;
            if (/[a-z]/.test(password)) strength++;
            if (/[0-9]/.test(password)) strength++;
            if (/[^a-zA-Z0-9]/.test(password)) strength++;
            return strength;
        }

        function updateStrengthMeter(strength) {
            const colors = ["bg-red-500", "bg-orange-500", "bg-yellow-500", "bg-blue-500", "bg-green-500"];
            const labels = ["Very Weak", "Weak", "Fair", "Strong", "Very Strong"];
            strengthBar.className = "h-2 rounded-full " + (colors[strength - 1] || "");
            strengthBar.style.width = strength ? (strength * 20) + "%" : "0%";
            strengthText.textContent = labels[strength - 1] || "";
            strengthText.className = "mt-1 text-sm " + (colors[strength - 1] ? colors[strength - 1].replace("bg-", "text-") : "text-gray-400");
        }

        passwordInput.addEventListener("input", () => {
            const value = passwordInput.value;
            const strength = checkPasswordStrength(value);
            if (!value) strengthWrapper.classList.add("hidden");
            else strengthWrapper.classList.remove("hidden");
            updateStrengthMeter(strength);
        });

        // Loader on submit
        form.addEventListener("submit", () => {
            submitBtn.disabled = true;
            submitText.textContent = "Resetting...";
            submitSpinner.classList.remove("hidden");
        });
    </script>
}
