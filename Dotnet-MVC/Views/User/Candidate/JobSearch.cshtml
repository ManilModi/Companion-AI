@model List<DotnetMVCApp.ViewModels.Candidate.JobSearchViewModel>
@{
    Layout = "~/Views/Shared/_CandidateLayout.cshtml";
}

<div class="text-white">
    <h1 class="text-3xl font-bold mb-6">Find Your Dream Job</h1>

    <!-- Search + Filter -->
    <div class="flex items-center mb-6 space-x-4">
        <input type="text" placeholder="Search jobs, companies, or keywords..."
               class="flex-1 px-4 py-2 rounded-xl bg-gray-800 text-white border border-gray-700 focus:outline-none focus:border-indigo-400" />
        <button class="px-4 py-2 rounded-xl bg-gradient-to-r from-indigo-300 to-purple-400 text-gray-900 font-medium shadow-md hover:shadow-lg transition duration-200">
            Filters
        </button>
    </div>

    <p class="text-gray-400 mb-4">Showing @Model.Count jobs</p>

    <div class="space-y-4">
        @foreach (var job in Model)
        {
            <div class="bg-gray-800 rounded-2xl p-6 shadow-md hover:shadow-xl transition">
                <div class="flex flex-col md:flex-row justify-between items-start md:items-center">
                    <!-- Job Info -->
                    <div>
                        <h2 class="text-xl font-semibold">@job.JobTitle</h2>
                        <p class="text-gray-400">@job.Company</p>
                        <div class="flex flex-wrap items-center text-sm text-gray-500 space-x-4 mt-2">
                            <span>@job.Location</span>
                            <span>@job.JobType</span>
                            <span>@job.SalaryRange</span>
                            <span>@(DateTime.Now.Subtract(job.PostedDate).Days) days ago</span>
                        </div>
                        <p class="text-sm text-gray-500 mt-2">@job.ApplicantsCount applicants</p>
                    </div>

                    <!-- Action Buttons -->
                    <div class="flex space-x-3 mt-4 md:mt-0 items-center">
                        <span class="px-3 py-1 text-sm rounded-full @(job.Status == "active" ? "bg-green-600 text-white" : "bg-red-600 text-white")">
                            @job.Status
                        </span>

                        <button type="button"
                                id="toggleBtn-@job.JobId"
                                class="px-4 py-2 rounded-xl bg-gray-700 text-gray-200 border border-gray-600 hover:border-gray-400 hover:text-white transition"
                                onclick="toggleJobCard(@job.JobId)">
                            View Details
                        </button>

                        <a href="@Url.Action("MockInterview", "Candidate", new { id = job.JobId })"
                           class="px-4 py-2 rounded-xl bg-gradient-to-r from-purple-400 to-pink-500 text-white font-medium shadow-md hover:shadow-lg transition duration-200">
                            Mock Interview
                        </a>

                        @if (job.HasApplied)
                        {
                            <button type="button"
                                    onclick="openWithdrawModal(@job.JobId)"
                                    class="px-4 py-2 rounded-xl bg-red-600 text-white font-medium shadow-md hover:bg-red-700 transition">
                                Withdraw Application
                            </button>
                        }
                        else
                        {
                            <a href="@Url.Action("ApplyJob", "Candidate", new { id = job.JobId })"
                               class="px-4 py-2 rounded-xl bg-gradient-to-r from-blue-400 to-cyan-400 text-white font-medium shadow-md hover:shadow-lg transition duration-200">
                                Apply Now
                            </a>
                        }
                    </div>
                </div>

                <!-- Hidden details section -->
                <div id="jobCard-@job.JobId" class="mt-4 hidden">
                    <div class="bg-gray-700 rounded-xl p-6">
                        <h4 class="text-lg font-semibold mb-3">Job Details</h4>

                        <div class="grid grid-cols-2 gap-4 text-sm text-gray-300 mb-4">
                            <p><strong>Company:</strong> @job.Company</p>
                            <p><strong>Location:</strong> @job.Location</p>
                            <p><strong>Job Type:</strong> @job.JobType</p>
                            <p><strong>Salary Range:</strong> @job.SalaryRange</p>
                            <p><strong>Open Time:</strong> @job.OpenTime.ToString("g")</p>
                            <p><strong>Close Time:</strong> @job.CloseTime.ToString("g")</p>
                        </div>

                        <!-- Description -->
                        <p class="text-gray-200 text-sm mb-2"><strong>Description:</strong></p>
                        <p class="text-gray-400 text-sm mb-4">@job.Description</p>

                        <!-- Tech Stacks -->
                        @if (!string.IsNullOrWhiteSpace(job.TechStacks))
                        {
                            <p class="text-gray-200 text-sm mb-2"><strong>Tech Stacks:</strong></p>
                            <div class="flex flex-wrap gap-2 mb-4">
                                @foreach (var stack in job.TechStacks.Split(',', StringSplitOptions.RemoveEmptyEntries))
                                {
                                    <span class="px-3 py-1 bg-indigo-600 text-white text-xs font-medium rounded-full shadow-sm">
                                        @stack.Trim()
                                    </span>
                                }
                            </div>
                        }

                        <!-- Skills Required -->
                        @if (!string.IsNullOrWhiteSpace(job.SkillsRequired))
                        {
                            <p class="text-gray-200 text-sm mb-2"><strong>Skills Required:</strong></p>
                            <div class="flex flex-wrap gap-2">
                                @foreach (var skill in job.SkillsRequired.Trim('[', ']').Split(',', StringSplitOptions.RemoveEmptyEntries))
                                {
                                    <span class="px-3 py-1 bg-gradient-to-r from-purple-500 to-pink-500 text-white text-xs font-medium rounded-full shadow-md">
                                        @skill.Trim(' ', '"')
                                    </span>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div> <!-- ✅ Closing the job card properly -->
        } <!-- ✅ Closing foreach -->
    </div>
</div>

<!-- Withdraw Confirmation Modal -->
<div id="withdrawModal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden z-50">
    <div class="bg-white rounded-2xl shadow-xl w-full max-w-md p-6">
        <h3 class="text-xl font-bold text-gray-800 mb-4">Confirm Withdrawal</h3>
        <p class="text-gray-600 mb-6">
            Are you sure you want to withdraw your application? This action cannot be undone.
        </p>

        <form id="withdrawForm" method="post" asp-action="WithdrawJob" asp-controller="Candidate">
            <input type="hidden" id="withdrawJobId" name="id" />
            <div class="flex justify-end space-x-3">
                <button type="button"
                        onclick="closeWithdrawModal()"
                        class="px-4 py-2 rounded-lg bg-gray-200 text-gray-700 hover:bg-gray-300 transition">
                    Cancel
                </button>
                <button type="submit"
                        class="px-4 py-2 rounded-lg bg-red-600 text-white font-medium hover:bg-red-700 transition">
                    Yes, Withdraw
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function toggleJobCard(jobId) {
            const card = document.getElementById(`jobCard-${jobId}`);
            const btn = document.getElementById(`toggleBtn-${jobId}`);
            if (!card || !btn) return;

            const visible = card.style.display === 'block';
            if (visible) {
                card.style.display = 'none';
                btn.innerText = 'View Details';
                return;
            }

            document.querySelectorAll('[id^="jobCard-"]').forEach(el => el.style.display = 'none');
            document.querySelectorAll('[id^="toggleBtn-"]').forEach(el => el.innerText = 'View Details');

            card.style.display = 'block';
            btn.innerText = 'Hide Details';
            card.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }

        function openWithdrawModal(jobId) {
            document.getElementById("withdrawModal").classList.remove("hidden");
            document.getElementById("withdrawJobId").value = jobId;
        }

        function closeWithdrawModal() {
            document.getElementById("withdrawModal").classList.add("hidden");
        }
    </script>
}
