@{
    ViewData["Title"] = "Sign In - Companion AI";
    var clerkUrl = "https://cdn.jsdelivr.net/npm/@clerk/clerk-js@5.83.0/dist/clerk.browser.js";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <!-- Tailwind CDN -->
    <script src="https://cdn.tailwindcss.com"></script>

    <script>
        let clerk;
        let clerkReady = false;

        async function initClerk() {
            if (!window.Clerk) return console.error("Clerk not available");

            clerk = window.Clerk;

            try {
                await clerk.load(); // ensures Clerk is fully initialized
                clerkReady = true;
                console.log("Clerk loaded successfully");

                const selectedRole = localStorage.getItem("selectedRole");

                // If user already signed in
                if (clerk.user) {
                    document.getElementById("role-selection").classList.add("hidden");
                    document.getElementById("auth-container").classList.remove("hidden");

                    if (selectedRole) {
                        handleLogin(clerk.user);
                    } else if (clerk.mountSignIn) {
                        clerk.mountSignIn(document.getElementById("sign-in"));
                    }
                }
            } catch (err) {
                console.error("Clerk failed to load:", err);
                alert("Failed to load login widget. Refresh the page.");
            }
        }

        async function handleLogin(user) {
            const email = user.primaryEmailAddress?.emailAddress;
            if (!email) return alert("Email not available from Clerk.");

            const role = localStorage.getItem("selectedRole") || "Candidate";

            const payload = {
                clerkId: user.id,
                email,
                fullName: user.fullName ?? "",
                role
            };

            try {
                const res = await fetch("/api/users/clerk-login", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(payload)
                });

                if (!res.ok) throw new Error("Failed to login");

                await res.json();
                localStorage.removeItem("selectedRole");
                window.location.href = "/Dashboard"; // redirect once
            } catch (err) {
                console.error("Error logging in:", err);
                alert("Error logging in. Please try again.");
            }
        }

        async function setRole(role) {
            localStorage.setItem("selectedRole", role);

            document.getElementById("role-selection").classList.add("hidden");
            document.getElementById("auth-container").classList.remove("hidden");

            // Wait until Clerk is fully ready
            while (!clerkReady) {
                await new Promise(resolve => setTimeout(resolve, 50));
            }

            if (clerk.mountSignIn) {
                clerk.mountSignIn(document.getElementById("sign-in"));
            }
        }
    </script>

    <!-- Dynamically load Clerk SDK -->
    <script>
        const script = document.createElement("script");
        script.src = "@clerkUrl";
        script.async = true;
        script.crossOrigin = "anonymous";
        script.dataset.clerkPublishableKey = "pk_test_YWJsZS10ZXRyYS0yOS5jbGVyay5hY2NvdW50cy5kZXYk";
        document.head.appendChild(script);

        script.onload = () => {
            console.log("Clerk script loaded");
            initClerk();
        };
    </script>
</head>
<body class="bg-gray-100 min-h-screen flex items-center justify-center">
    <div class="bg-white rounded-2xl shadow-xl p-10 w-full max-w-md text-center">
        <h1 class="text-3xl font-bold text-gray-800 mb-4">Welcome to Companion AI</h1>
        <p class="text-gray-600 mb-8">Streamline your AI-driven workflows. Select your role and sign in below.</p>

        <!-- Role Selection -->
        <div id="role-selection" class="space-y-4">
            <h2 class="text-xl font-semibold text-gray-700">Select your role</h2>
            <div class="flex justify-center gap-4">
                <button onclick="setRole('HR')" class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition">HR</button>
                <button onclick="setRole('Candidate')" class="px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition">Candidate</button>
            </div>
        </div>

        <!-- Clerk Sign-in container -->
        <div id="auth-container" class="mt-8 hidden">
            <div id="sign-in"></div>
        </div>
    </div>

    <script>
        window.Clerk?.addListener("userSignedIn", (user) => {
            const selectedRole = localStorage.getItem("selectedRole");
            if (selectedRole && window.location.pathname === "/") {
                handleLogin(user);
            }
        });
    </script>
</body>
</html>
