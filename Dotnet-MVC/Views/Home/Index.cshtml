@{
    ViewData["Title"] = "Sign In";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MyApp</title>
    <link rel="stylesheet" href="~/css/site.css" />

    <!-- Clerk Frontend SDK -->
    <script async
            crossorigin="anonymous"
            data-clerk-publishable-key="pk_test_YWJsZS10ZXRyYS0yOS5jbGVyay5hY2NvdW50cy5kZXYk"
            src="https://cdn.jsdelivr.net/npm/@@clerk/clerk-js@latest/dist/clerk.browser.js">
    </script>
</head>

<body>
    <div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    </div>

    <!-- Role selection -->
    <div id="role-selection" style="text-align:center; margin: 50px auto;">
        <h2>Select your role</h2>
        <button onclick="setRole('Client')">HR</button>
        <button onclick="setRole('Photographer')">Candidate</button>
    </div>

    <!-- Clerk Sign-in container -->
    <div id="auth-container" style="margin: 50px auto; width: 350px; display:none;">
        <div id="sign-in"></div>
    </div>

    <script>
        let clerk; // global reference

        // Step 1: Set role and show Clerk login
        function setRole(role) {
            localStorage.setItem("selectedRole", role);

            document.getElementById("role-selection").style.display = "none";
            document.getElementById("auth-container").style.display = "block";

            clerk.mountSignIn(document.getElementById("sign-in"));
        }

        // Step 2: Load Clerk
        window.addEventListener("load", async function () {
            clerk = window.Clerk;
            await clerk.load();

            // If already signed in
            if (clerk.user) {
                handleLogin(clerk.user);
            }
        });

        // Step 3: Handle Clerk login and send to backend
        async function handleLogin(user) {
            const emailAddress = user.primaryEmailAddress?.emailAddress;
            if (!emailAddress) {
                alert("Email not available from Clerk. Please check your account.");
                return;
            }

            // Get role from localStorage (fallback to Client)
            const role = localStorage.getItem("selectedRole") || "Client";

            const payload = {
                clerkId: user.id,
                email: emailAddress,
                fullName: user.fullName ?? "",
                role: role
            };

            try {
                const res = await fetch("/api/users/clerk-login", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(payload)
                });

                if (!res.ok) throw new Error("Failed to login");

                const data = await res.json();
                console.log("User logged in:", data);

                // Clear localStorage role
                localStorage.removeItem("selectedRole");

                // Redirect to dashboard
                window.location.href = "/Dashboard";
            } catch (err) {
                console.error("Error logging in:", err);
                alert("Error logging in. Please try again.");
            }
        }

        // Step 4: Listen for Clerk login events
        window.Clerk?.addListener("userSignedIn", (user) => {
            handleLogin(user);
        });
    </script>
</body>
</html>
